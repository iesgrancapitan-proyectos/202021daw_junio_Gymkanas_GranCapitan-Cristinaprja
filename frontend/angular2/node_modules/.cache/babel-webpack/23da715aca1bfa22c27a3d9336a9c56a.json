{"ast":null,"code":"import _asyncToGenerator from \"F:/Usuarios/Usuario/Desktop/angular2/angular2/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { HomeComponent } from '../home/home.component';\nimport * as EventEmitter from 'events';\nimport { FormControl, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/auth/auth.service\";\nimport * as i2 from \"src/app/services/user.service\";\nimport * as i3 from \"src/app/services/data.service\";\nimport * as i4 from \"@angular/router\";\nimport * as i5 from \"../home/home.component\";\nimport * as i6 from \"@angular/material/form-field\";\nimport * as i7 from \"@angular/material/input\";\nimport * as i8 from \"@angular/common\";\nimport * as i9 from \"@angular/material/button\";\n\nfunction SingleTestComponent_mat_error_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"Es requerido\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nexport class SingleTestComponent extends HomeComponent {\n  constructor(authService, userService, dataService, router, route) {\n    super(authService, userService);\n    this.authService = authService;\n    this.userService = userService;\n    this.dataService = dataService;\n    this.router = router;\n    this.route = route;\n    this.valueResponse = new EventEmitter();\n    this.formControl = new FormControl('', Validators.required);\n    this.showSingleTest();\n  }\n\n  ngOnInit() {\n    console.log(this.test);\n  }\n\n  ngOnDestroy() {\n    this.valueResponse.emit(\"true\");\n  }\n\n  showSingleTest() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      _this.route.params.subscribe(params => {\n        if (params['id']) {\n          _this.dataService.getSingleTest(params['id']).subscribe(res => {\n            _this.test = res[0];\n            console.log(_this.test);\n\n            if (_this.test[0].photo !== '') {\n              _this.photo = true;\n            } else {\n              _this.photo = false;\n            }\n\n            console.log(_this.photo);\n          });\n        }\n      });\n    })();\n  }\n\n  sendAnswer(id_gymkana, id_test) {\n    this.answer = document.getElementById('answer').value;\n    console.log(this.answer); // this.route.params.subscribe(params => {\n    //   if(params['answer']){\n    // this.dataService.storeAnwser(params['id_gymkana'], params['id'],this.answer); //Llamada a la api para nuevo test\n\n    this.dataService.storeAnwser(id_gymkana, id_test, this.answer); //Llamada a la api para nuevo test\n    // this.router.navigate)[`/`] //Volver a la gymkana con la que estoy \n    //   }\n    // });\n  }\n\n}\n\nSingleTestComponent.ɵfac = function SingleTestComponent_Factory(t) {\n  return new (t || SingleTestComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.UserService), i0.ɵɵdirectiveInject(i3.DataService), i0.ɵɵdirectiveInject(i4.Router), i0.ɵɵdirectiveInject(i4.ActivatedRoute));\n};\n\nSingleTestComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: SingleTestComponent,\n  selectors: [[\"app-single-test\"]],\n  outputs: {\n    valueResponse: \"valueResponse\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 15,\n  vars: 3,\n  consts: [[1, \"container\"], [1, \"row\"], [1, \"col-md-6\", \"mx-auto\", \"my-5\"], [1, \"example-form-field\"], [\"matInput\", \"\", \"type\", \"text\", \"placeholder\", \"Respuesta\", \"id\", \"answer\", \"formControlName\", \"formControl\"], [4, \"ngIf\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", 3, \"click\"]],\n  template: function SingleTestComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"app-home\");\n      i0.ɵɵelementStart(1, \"div\", 0);\n      i0.ɵɵelementStart(2, \"div\", 1);\n      i0.ɵɵelementStart(3, \"div\", 2);\n      i0.ɵɵelementStart(4, \"div\");\n      i0.ɵɵelementStart(5, \"mat-label\");\n      i0.ɵɵelementStart(6, \"h4\");\n      i0.ɵɵtext(7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"p\");\n      i0.ɵɵtext(9);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"mat-form-field\", 3);\n      i0.ɵɵelement(11, \"input\", 4);\n      i0.ɵɵtemplate(12, SingleTestComponent_mat_error_12_Template, 2, 0, \"mat-error\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"button\", 6);\n      i0.ɵɵlistener(\"click\", function SingleTestComponent_Template_button_click_13_listener() {\n        return ctx.sendAnswer(ctx.test[0].id_gymkana, ctx.test[0].id);\n      });\n      i0.ɵɵtext(14, \"Enviar\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(7);\n      i0.ɵɵtextInterpolate1(\"T\\u00EDtulo: \", ctx.test.name, \"\");\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate1(\" \", ctx.test.description, \" \");\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ctx.formControl.invalid);\n    }\n  },\n  directives: [i5.HomeComponent, i6.MatLabel, i6.MatFormField, i7.MatInput, i8.NgIf, i9.MatButton, i6.MatError],\n  styles: [\"<mat-sidenav-container[_ngcontent-%COMP%]   class=\\\"sidenav-container\\\"[_ngcontent-%COMP%] > <mat-sidenav[_ngcontent-%COMP%]   #drawer[_ngcontent-%COMP%]   class=\\\"sidenav\\\"[_ngcontent-%COMP%]   fixedInViewport[_ngcontent-%COMP%] > <mat-toolbar[_ngcontent-%COMP%] > Menu</mat-toolbar[_ngcontent-%COMP%] > <mat-nav-list[_ngcontent-%COMP%] > <a[_ngcontent-%COMP%]   mat-list-item[_ngcontent-%COMP%]   routerLink=\\\"/gymkanas\\\"[_ngcontent-%COMP%] > Gymkanas</a[_ngcontent-%COMP%] > </mat-nav-list[_ngcontent-%COMP%] > </mat-sidenav[_ngcontent-%COMP%] > <mat-sidenav-content[_ngcontent-%COMP%] > <mat-toolbar[_ngcontent-%COMP%]   color=\\\"primary\\\"[_ngcontent-%COMP%] > <button[_ngcontent-%COMP%]   *ngIf=\\\"logued\\\"[_ngcontent-%COMP%]   type=\\\"button\\\"[_ngcontent-%COMP%]   aria-label=\\\"Toggle sidenav\\\"[_ngcontent-%COMP%]   mat-icon-button[_ngcontent-%COMP%]   (click)=\\\"drawer.toggle()\\\"[_ngcontent-%COMP%] > <mat-icon[_ngcontent-%COMP%]   aria-label=\\\"Side nav toggle icon\\\"[_ngcontent-%COMP%] > menu</mat-icon[_ngcontent-%COMP%] > </button[_ngcontent-%COMP%] > <span[_ngcontent-%COMP%] > <a[_ngcontent-%COMP%]   class=\\\"title\\\"[_ngcontent-%COMP%]   href=\\\"/home\\\"[_ngcontent-%COMP%] > Gymkanas[_ngcontent-%COMP%]   Gran[_ngcontent-%COMP%]   Capit\\u00E1n</a[_ngcontent-%COMP%] > </span[_ngcontent-%COMP%] > <span[_ngcontent-%COMP%]   class=\\\"example-spacer\\\"[_ngcontent-%COMP%] > </span[_ngcontent-%COMP%] > <span[_ngcontent-%COMP%]   *ngIf=\\\"logued\\\"[_ngcontent-%COMP%] > <span[_ngcontent-%COMP%] > Hola[_ngcontent-%COMP%] {{name}}</span>\\n            <img mat-card-sm-avatar src=\\\"{{profilePhoto}}\\\">\\n            <button mat-raised-button color=\\\"accent\\\" (click)=\\\"authService.logout()\\\">Cerrar Sesion</button>\\n          </span>\\n        \\n      </mat-toolbar>\\n      <!-- Add Content Here -->\\n      <router-outlet></router-outlet>\\n    </mat-sidenav-content>\\n  </mat-sidenav-container>\\n  <mat-card *ngIf=\\\"logued\\\">\\n    <p>Bienvenido Gymkanas Gran Capit\\u00E1n</p>\\n  </mat-card>\", \".example-form-field[_ngcontent-%COMP%] {\\n  width: 100%;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNpbmdsZS10ZXN0LmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksV0FBQTtBQUNKIiwiZmlsZSI6InNpbmdsZS10ZXN0LmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmV4YW1wbGUtZm9ybS1maWVsZHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG59Il19 */\"]\n});","map":{"version":3,"sources":["F:\\Usuarios\\Usuario\\Desktop\\angular2\\angular2\\src\\app\\components\\single-test\\single-test.component.ts","F:\\Usuarios\\Usuario\\Desktop\\angular2\\angular2\\src\\app\\components\\single-test\\single-test.component.html"],"names":[],"mappings":"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","sourcesContent":["import { Component, OnInit, Output } from '@angular/core';\nimport { AuthService } from 'src/app/services/auth/auth.service';\nimport { UserService } from 'src/app/services/user.service';\nimport { DataService } from 'src/app/services/data.service';\nimport { HomeComponent } from '../home/home.component';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Test } from 'src/app/models/Test';\nimport * as EventEmitter from 'events';\nimport { FormControl, Validators } from '@angular/forms';\n\n\n@Component({\n  selector: 'app-single-test',\n  templateUrl: './single-test.component.html',\n  styleUrls: ['../home/home.component.html','./single-test.component.scss']\n})\nexport class SingleTestComponent extends HomeComponent implements OnInit {\n  test:Test;\n  photo:boolean;\n  answer: string;\n  @Output() valueResponse:EventEmitter = new EventEmitter();\n  formControl: FormControl = new FormControl('',Validators.required)\n  constructor(\n    public authService:AuthService,\n    public userService:UserService,\n    public dataService:DataService,\n    private router:Router,\n    private route:ActivatedRoute,\n    ) {\n      super(authService, userService);\n      this.showSingleTest();\n    }\n\n  ngOnInit(): void {\n    console.log(this.test);\n    \n  }\n\n  ngOnDestroy(){\n    this.valueResponse.emit(\"true\");\n  }\n  async showSingleTest(){\n    this.route.params.subscribe(params => {\n      if(params['id']){\n        this.dataService.getSingleTest(params['id']).subscribe(res => {\n          this.test= res[0];\n          console.log(this.test);\n          if(this.test[0].photo !== ''){\n            this.photo = true;\n          }else{\n            this.photo = false;\n          }\n          console.log(this.photo);\n        })\n      }\n    });\n  }\n  sendAnswer(id_gymkana:number, id_test:number){\n    this.answer = (document.getElementById('answer') as HTMLInputElement).value;\n    console.log(this.answer);\n    // this.route.params.subscribe(params => {\n    //   if(params['answer']){\n      // this.dataService.storeAnwser(params['id_gymkana'], params['id'],this.answer); //Llamada a la api para nuevo test\n      this.dataService.storeAnwser(id_gymkana, id_test, this.answer); //Llamada a la api para nuevo test\n    // this.router.navigate)[`/`] //Volver a la gymkana con la que estoy \n    //   }\n    // });\n  }\n\n}\n","<app-home></app-home>\n<div class=\"container\">\n  <div class=\"row\">\n    <div class=\"col-md-6 mx-auto my-5\">\n        <div>\n            <mat-label>\n                <h4>Título: {{test.name}}</h4>\n            </mat-label>\n            <!-- <mat-card-img *ngIf=\"testPhoto\" alt=\"Card image cap\" src={{test.image}}></mat-card-img> -->\n            <p>\n                {{test.description}}\n            </p>\n            <mat-form-field class=\"example-form-field\">\n                <input matInput type=\"text\" placeholder=\"Respuesta\" \n                id=\"answer\" formControlName=\"formControl\">\n                <mat-error *ngIf=\"formControl.invalid\">Es requerido</mat-error>\n            </mat-form-field>\n            <button mat-raised-button color=\"primary\" \n            (click)=\"sendAnswer(test[0].id_gymkana, test[0].id)\">Enviar</button>\n        </div>\n    </div>\n  </div>\n</div>"],"sourceRoot":""},"metadata":{},"sourceType":"module"}